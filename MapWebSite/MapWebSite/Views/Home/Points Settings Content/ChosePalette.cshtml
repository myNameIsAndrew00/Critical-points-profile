@using MapWebSite.Resources.text
@model  MapWebSite.Domain.ViewModel.ChosePaletteViewModel

@{
    Layout = null;
}
<input type="hidden" id="_use-button-text" value="@TextDictionary.HPSCPUseButton" />
<input type="hidden" id="_preview-button-text" value="@TextDictionary.HPSCPPreviewButton" />

<div class="points-settings-layer-container-palette-content points-settings-layer-container-content">
    <div class="ps_header">
        <h4>@Html.Raw(TextDictionary.HPSCPTitle)</h4>
        @Html.DropDownList("filter",
                         EnumHelper.GetSelectList(typeof(MapWebSite.Core.Database.ColorMapFilters)),
                         new { id = "colorPaletteFilterValue", onchange = "loadMorePalettes(true)" })

        <input type="search" id="colorPaletteSearchValue" placeholder="@TextDictionary.HPSCPSearchText" onkeyup="loadMorePalettes(true)" />
        <input type="hidden" id="colorPalettesPerPage" value="@MapWebSite.Domain.ViewModel.ChosePaletteViewModel.ColorPalettesPerPage" />
        <input type="hidden" id="colorsTableColorsPerRow" value="@Model.ColorsPerRow" />
        <input type="hidden" id="currentColorPaletteIndex" value="1" />
    </div>
    <div class="ps_left" id="ps_left" onscroll="loadMorePalettes(false)">
        <table>
            <tr class="table-header">
                <th><object width="14px" height="35px" type="image/svg+xml" data="~/Resources/resources/icons/user_palette_icon.svg"></object></th>
                <th>@TextDictionary.HPSCPHead1</th>
                <th>@TextDictionary.HPSCPHead2</th>
                <th>@TextDictionary.HPSCPHead3</th>
            </tr>

            @foreach (var item in Model.UsersColorMaps)
            {
                <tr id="user_palette_index_@(item.Item1)_@(item.Item2.Name)">
                    <td>@item.Item1</td>
                    <td>@item.Item2.Name</td>
                    <td>
                        <table class="palette">
                            @{
                                var intervals = item.Item2.Intervals;
                                int rowsCount = intervals.Count / Model.ColorsPerRow,
                                    intervalsIndex = 0;
                            }
                            @for (int index = 0; index <= rowsCount; index++)
                            {
                                <tr>
                                    @for (int rowIndex = 0; rowIndex < Model.ColorsPerRow && intervalsIndex < item.Item2.Intervals.Count; rowIndex++, intervalsIndex++)
                                    {
                                        <td style="background:@intervals[intervalsIndex].Color"></td>
                                    }
                                </tr>
                            }
                        </table>
                    </td>
                    <td>
                        <button class="use" onclick="useColorMap('@(item.Item1)_@(item.Item2.Name)','@item.Item1','@item.Item2.Name')">@TextDictionary.HPSCPUseButton</button>
                        <button class="preview">@TextDictionary.HPSCPPreviewButton</button>
                    </td>
                </tr>
            }

        </table>
    </div>
    <aside class="ps_right"></aside>
</div>

<script>
    getScript('#points-settings-layer-container-content', '/Resources/js/points settings/chose_palette.js');
</script>